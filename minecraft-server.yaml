heat_template_version: 2015-10-15

description: |
  A [Minecraft Multiplayer Server](http://minecraft.gamepedia.com/Setting_up_a_server)
  running on a single Linux Cloud Server. The default version is
  1.8.8 unless otherwise specified.

parameter_groups:
- label: Minecraft Settings
  parameters:
  - minecraft_terms
  - minecraft_motd
  - minecraft_port
  - minecraft_gamemode
  - minecraft_spawn_animals
  - minecraft_spawn_monsters
  - minecraft_spawn_npcs
  - minecraft_difficulty
  - minecraft_max_players

parameters:
  #Minecraft Settings
  minecraft_terms:
    type: boolean
    label: I Agree to the Mojang Terms and Conditions
    description: |
      Required: You must agree to the Minecraft EULA found here:
      https://account.mojang.com/documents/minecraft_eula
    constraints:
    - allowed_values:
      - True
      description: You must agree to the Terms and Conditions
  minecraft_motd:
    type: string
    default: "A Minecraft Server"
    label: Server Message Of The Day
    description: Message Of The Day to be displayed in the Minecraft Multiplayer Server List
  minecraft_port:
    type: number
    default: 25565
    label: Server Port
    description: TCP Port to have Minecraft listen on
    constraints:
    - range:
        min: 1024
        max: 65535
      description: Must be between 1024 and 65535
  minecraft_gamemode:
    type: number
    default: 0
    label: Game Mode
    description: "Default game mode.  0: Survival, 1: Creative, 2: Adventure, 3: Spectator"
    constraints:
    - allowed_values:
      - 0
      - 1
      - 2
      - 3
  minecraft_spawn_animals:
    type: boolean
    default: true
    label: Spawn Animals?
    description: Enable or Disable spawning of passive mobs (animals)
  minecraft_spawn_monsters:
    type: boolean
    default: true
    label: Spawn Monsters?
    description: Enable or Disable spawning of aggressive mobs (monsters)
  minecraft_spawn_npcs:
    type: boolean
    default: true
    label: Spawn NPCs?
    description: Enable or Disable spawning of NPCs (villagers)
  minecraft_difficulty:
    type: number
    default: 2
    label: Difficulty
    description: "Difficulty of Minecraft. 0: Peaceful, 1: Easy, 2: Normal, 3: Hard"
    constraints:
    - allowed_values:
      - 0
      - 1
      - 2
      - 3
  minecraft_max_players:
    type: number
    default: 20
    label: Max Players
    description: Maximum number of players on this server
    constraints:
    - range:
        min: 1
        max: 999
  #Advanced Settings
  minecraft_online:
    type: boolean
    default: true
    label: Online?
    description: If enabled, all users will be required to have a valid Mojang account in order to connect
  minecraft_email:
    type: string
    default: admin@example.com
    label: E-mail
    description: E-mail address to be notified when backups fail
  server_flavor:
    type: string
    default: 2 GB General Purpose v1
    label: Server Flavor
    description: Flavor of Cloud Server to use
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
#  server_image:
#    type: string
#    default: f4bbbce2-50b0-4b07-bf09-96c175a45f4b
#    label: Server Image
#    description: Image to use for WordPress
#    constraints:
#    - allowed_values:
#      - f4bbbce2-50b0-4b07-bf09-96c175a45f4b

resources:
  ssh_key:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: 'OS::stack_id' }
      save_private_key: true
  upload_role_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      outputs:
      - name: results
      config: |
        #!/bin/bash
        set -e
        git clone -b 'stable' --single-branch --progress https://github.com/rackspace-orchestration-templates/ansible-roles.git /etc/ansible/roles > $heat_outputs_path.results 2>&1
  minecraft_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      inputs:
      - default: "[]"
        name: firewall_global_rules
        type: CommaDelimitedList
      config: |
        ---
        - name: Install and configure Minecraft
          hosts: localhost
          connection: local
          roles:
          - common
          - minecraft
          - firewall
  deploy_roles:
    type: OS::Heat::SoftwareDeployment
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config:
        get_resource: upload_role_config
      server:
        get_resource: minecraft_server
  deploy_minecraft:
    type: OS::Heat::SoftwareDeployment
    depends_on: deploy_roles
    properties:
      signal_transport: TEMP_URL_SIGNAL
      input_values:
        tz: "America/Chicago"
        minecraft_gamemode: { get_param: minecraft_gamemode }
        minecraft_difficulty: { get_param: minecraft_difficulty }
        minecraft_spawn_monsters: { get_param: minecraft_spawn_monsters }
        minecraft_spawn_npcs: { get_param: minecraft_spawn_npcs }
        minecraft_spawn_animals: { get_param: minecraft_spawn_animals }
        minecraft_motd: { get_param: minecraft_motd }
        minecraft_online: { get_param: minecraft_online }
        minecraft_port: { get_param: minecraft_port }
        minecraft_max_players: { get_param: minecraft_max_players }
        firewall_global_rules:
          - "0.0.0.0,0,22,tcp"
          - str_replace:
              template: "0.0.0.0,0,PORT,tcp"
              params:
                PORT: { get_param: minecraft_port }
      config:
        get_resource: minecraft_config
      server:
        get_resource: minecraft_server
  minecraft_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: 'OS::stack_name' }
      flavor: { get_param: server_flavor }
#      image: { get_param: server_image }
      image: f4bbbce2-50b0-4b07-bf09-96c175a45f4b
      key_name: { get_resource: ssh_key }
      software_config_transport: POLL_TEMP_URL
      config_drive: true
      user_data_format: SOFTWARE_CONFIG
      metadata:
        rax-heat: { get_param: 'OS::stack_id' }
        build_config: "backup_agent_only,monitoring_defaults"
  minecraft_port_check:
    type: Rackspace::CloudMonitoring::Check
    depends_on: minecraft_server
    properties:
      entity: { get_resource: minecraft_server }
      type: remote.tcp
      label: Minecraft
      details:
        port: { get_param: minecraft_port }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        stack-name: { get_param: "OS::stack_name" }
      period: 120
      timeout: 10
      monitoring_zones_poll:
      - Northern Virginia (IAD)
      - Chicago (ORD)
      - Dallas Fort Worth (DFW)
      - London (LON)
      target_hostname: { get_attr: [minecraft_server, accessIPv4] }
      target_receiver: IPv4
  minecraft_backup:
    type: Rackspace::Cloud::BackupConfig
    depends_on: minecraft_server
    properties:
      host_ip_address: { get_attr: [minecraft_server, accessIPv4] }
      BackupConfigurationName:
        str_replace:
          template: stack Weekly Backup
          params:
            stack: { get_param: "OS::stack_name" }
      Inclusions:
      - FilePath: "/home/minecraft"
        FileItemType: "Folder"
      NotifyFailure: true
      NotifyRecipients: { get_param: minecraft_email }
      TimeZoneId: Central Standard Time
      StartTimeAmPm: AM
      StartTimeHour: 1
      StartTimeMinute: 0
      HourInterval: null
      DayOfWeekId: 0
      Frequency: "Weekly"
      VersionRetention: 30

outputs:
  minecraft_public_ip:
    description: Server IP
    value: { get_attr: [minecraft_server, accessIPv4] }
  minecraft_connection:
    description: Server Address
    value:
      str_replace:
        template: "IP:PORT"
        params:
          IP: { get_attr: [minecraft_server, accessIPv4] }
          PORT: { get_param: minecraft_port }
  ssh_private_key:
    description: SSH Private Key
    value: { get_attr: [ssh_key, private_key] }
